}
likelihood.vector.stratum.2 <- likelihood.vector[-1]/likelihood.vector[1]
likelihood.vector.stratum.3 <- apply(combn(likelihood.vector.stratum.2, 2), 2, prod)
likelihood.vector.stratum.4 <- prod(likelihood.vector.stratum.2)
coefficients <- c(
likelihood.vector.stratum.4,  #Coefficient of p^3
sum(likelihood.vector.stratum.3),  #Coefficient of p^2
sum(likelihood.vector.stratum.2)+1,  #Coefficient of p^1
-1                            #Constant term at the end
)
#Find the roots of the equation
roots <- polyroot(rev(coefficients))
non.Im.root <- Re(roots[Im(roots) == 0])
if(length(non.Im.root)==0){
tolerance <- 1e-10
non.Im.root <- Re(roots[abs(Im(roots)) < tolerance])
}
p.vector <- c(non.Im.root, non.Im.root*likelihood.vector.stratum.2, non.Im.root^2*likelihood.vector.stratum.3, non.Im.root^3*likelihood.vector.stratum.4)
criteria.percentages <- as.matrix(state.df) %*% (p.vector)
option.val <- as.matrix(comparison.mat) %*% (as.matrix(state.df) %*% (p.vector))
return(option.val)
}
read.csv.SMCDM.matrices("~/Downloads/Doris_example_SMCDM.csv")
read.csv("~/Downloads/Doris_example_SMCDM.csv", header=FALSE)
read.csv("~/Downloads/Doris_example_SMCDM.csv", header=FALSE)->dat.path
read.csv.SMCDM.matrices(dat.path)
hold.dat <- read.csv.SMCDM.matrices(dat.path)
apply.SMCDM(hold.dat[[1]], hold.dat[[2]], hold.dat[[3]], independent.events = FALSE)
apply.SMCDM <- function(comparison.mat, state.criteria.probs, likelihood.vector, independent.events = TRUE){
if(independent.events == TRUE){
extended.states <- t(apply(state.criteria.probs[,2:ncol(state.criteria.probs)], 1, function(x) {
apply(combn(ncol(state.criteria.probs[,2:ncol(state.criteria.probs)]), 2), 2, function(y) mean(x[y])) }))
all.event.happened.state <- rowMeans(state.criteria.probs[,2:ncol(state.criteria.probs)])
extended.states <- cbind(extended.states, all.event.happened.state)
colnames(extended.states) <- paste0("state.", seq(ncol(state.criteria.probs), ncol(state.criteria.probs)+ncol(extended.states)-1, 1))
state.df <- cbind(state.criteria.probs, extended.states)
}else{
state.df <- state.criteria.probs
}
likelihood.vector.stratum.2 <- likelihood.vector[-1]/likelihood.vector[1]
likelihood.vector.stratum.3 <- apply(combn(likelihood.vector.stratum.2, 2), 2, prod)
likelihood.vector.stratum.4 <- prod(likelihood.vector.stratum.2)
coefficients <- c(
likelihood.vector.stratum.4,  #Coefficient of p^3
sum(likelihood.vector.stratum.3),  #Coefficient of p^2
sum(likelihood.vector.stratum.2)+1,  #Coefficient of p^1
-1                            #Constant term at the end
)
#Find the roots of the equation
roots <- polyroot(rev(coefficients))
non.Im.root <- Re(roots[Im(roots) == 0])
if(length(non.Im.root)==0){
tolerance <- 1e-10
non.Im.root <- Re(roots[abs(Im(roots)) < tolerance])
}
p.vector <- c(non.Im.root, non.Im.root*likelihood.vector.stratum.2, non.Im.root^2*likelihood.vector.stratum.3, non.Im.root^3*likelihood.vector.stratum.4)
criteria.percentages <- as.matrix(state.df) %*% (p.vector)
option.val <- as.matrix(comparison.mat) %*% (as.matrix(state.df) %*% (p.vector))
return(option.val)
}
apply.SMCDM(hold.dat[[1]], hold.dat[[2]], hold.dat[[3]], independent.events = FALSE)
comparison.mat<- hold.dat[[1]]
state.criteria.probs <- hold.dat[[2]]
likelihood.vector <- hold.dat[[3]]
state.df <- state.criteria.probs
likelihood.vector.stratum.2 <- likelihood.vector[-1]/likelihood.vector[1]
likelihood.vector.stratum.3 <- apply(combn(likelihood.vector.stratum.2, 2), 2, prod)
likelihood.vector.stratum.4 <- prod(likelihood.vector.stratum.2)
coefficients <- c(
likelihood.vector.stratum.4,  #Coefficient of p^3
sum(likelihood.vector.stratum.3),  #Coefficient of p^2
sum(likelihood.vector.stratum.2)+1,  #Coefficient of p^1
-1                            #Constant term at the end
)
roots <- polyroot(rev(coefficients))
non.Im.root <- Re(roots[Im(roots) == 0])
non.Im.root
if(length(non.Im.root)==0){
tolerance <- 1e-10
non.Im.root <- Re(roots[abs(Im(roots)) < tolerance])
}
non.Im.root
p.vector <- c(non.Im.root, non.Im.root*likelihood.vector.stratum.2, non.Im.root^2*likelihood.vector.stratum.3, non.Im.root^3*likelihood.vector.stratum.4)
p.vector
criteria.percentages <- as.matrix(state.df) %*% (p.vector)
length(p.vector)
dim(state.df)
state.df
likelihood.vector.stratum.4
likelihood.vector.stratum.3
likelihood.vector.stratum.2
likelihood.vector
apply.SMCDM(hold.dat[[1]], hold.dat[[2]], c(0.17, 0.42, 0.17, 0.08), independent.events = FALSE)
likelihood.vector<-c(0.17, 0.42, 0.17, 0.08)
likelihood.vector.stratum.2 <- likelihood.vector[-1]/likelihood.vector[1]
likelihood.vector.stratum.3 <- apply(combn(likelihood.vector.stratum.2, 2), 2, prod)
likelihood.vector.stratum.4 <- prod(likelihood.vector.stratum.2)
coefficients <- c(
likelihood.vector.stratum.4,  #Coefficient of p^3
sum(likelihood.vector.stratum.3),  #Coefficient of p^2
sum(likelihood.vector.stratum.2)+1,  #Coefficient of p^1
-1                            #Constant term at the end
)
#Find the roots of the equation
roots <- polyroot(rev(coefficients))
non.Im.root <- Re(roots[Im(roots) == 0])
if(length(non.Im.root)==0){
tolerance <- 1e-10
non.Im.root <- Re(roots[abs(Im(roots)) < tolerance])
}
p.vector <- c(non.Im.root, non.Im.root*likelihood.vector.stratum.2, non.Im.root^2*likelihood.vector.stratum.3, non.Im.root^3*likelihood.vector.stratum.4)
p.vector
criteria.percentages <- as.matrix(state.df) %*% (p.vector)
as.matrix(state.df) %*% (p.vector)
as.matrix(state.df)
!is.na(as.matrix(state.df))
as.matrix(state.df)[!is.na(as.matrix(state.df))]
as.matrix(state.df[,-1]) %*% (p.vector)
as.matrix(state.df[,1:(ncol(state.df)-1)]) %*% (p.vector)
likelihood.vector
likelihood.vector[-1]
likelihood.vector[-1:3]
likelihood.vector
#' @return the SMCDM results
#' @export
#'
#' @examples
#' data <- read.csv(system.file("extdata", "SMCDM_input.csv", package = "RMCDA"), header=FALSE)
#' mat.lst <- read.csv.SMCDM.matrices(data)
#' comparison.mat <- mat.lst[[1]]
#' state.criteria.probs <- mat.lst[[2]]
#' likelihood.vector <- mat.lst[[3]]
#' apply.SMCDM(comparison.mat, state.criteria.probs, likelihood.vector)
apply.SMCDM <- function(comparison.mat, state.criteria.probs, likelihood.vector, independent.events = TRUE){
if(independent.events == TRUE){
extended.states <- t(apply(state.criteria.probs[,2:ncol(state.criteria.probs)], 1, function(x) {
apply(combn(ncol(state.criteria.probs[,2:ncol(state.criteria.probs)]), 2), 2, function(y) mean(x[y])) }))
all.event.happened.state <- rowMeans(state.criteria.probs[,2:ncol(state.criteria.probs)])
extended.states <- cbind(extended.states, all.event.happened.state)
colnames(extended.states) <- paste0("state.", seq(ncol(state.criteria.probs), ncol(state.criteria.probs)+ncol(extended.states)-1, 1))
state.df <- cbind(state.criteria.probs, extended.states)
likelihood.vector.stratum.2 <- likelihood.vector[-1]/likelihood.vector[1]
likelihood.vector.stratum.3 <- apply(combn(likelihood.vector.stratum.2, 2), 2, prod)
likelihood.vector.stratum.4 <- prod(likelihood.vector.stratum.2)
}else{
state.df <- state.criteria.probs
likelihood.vector.stratum.2 <- likelihood.vector[2:4]
likelihood.vector.stratum.3 <- likelihood.vector[5:7]
likelihood.vector.stratum.4 <- likelihood.vector[8]
}
coefficients <- c(
likelihood.vector.stratum.4,  #Coefficient of p^3
sum(likelihood.vector.stratum.3),  #Coefficient of p^2
sum(likelihood.vector.stratum.2)+1,  #Coefficient of p^1
-1                            #Constant term at the end
)
#Find the roots of the equation
roots <- polyroot(rev(coefficients))
non.Im.root <- Re(roots[Im(roots) == 0])
if(length(non.Im.root)==0){
tolerance <- 1e-10
non.Im.root <- Re(roots[abs(Im(roots)) < tolerance])
}
p.vector <- c(non.Im.root, non.Im.root*likelihood.vector.stratum.2, non.Im.root^2*likelihood.vector.stratum.3, non.Im.root^3*likelihood.vector.stratum.4)
criteria.percentages <- as.matrix(state.df) %*% (p.vector)
option.val <- as.matrix(comparison.mat) %*% (as.matrix(state.df) %*% (p.vector))
return(option.val)
}
apply.SMCDM(hold.dat[[1]], hold.dat[[2]], c(0.17, 0.42, 0.17, 0.08), independent.events = FALSE)
apply.SMCDM(hold.dat[[1]], hold.dat[[2]], c(0.17, 0.42, 0.17, 0.08, 0.08, 0.05, 0.02, 0.01), independent.events = FALSE)
hold.dat[[1]]
hold.dat[[2]]
apply.SMCDM(hold.dat[[1]], hold.dat[[2]][,1:(ncol(hold.dat[[2]])-1)], c(0.17, 0.42, 0.17, 0.08, 0.08, 0.05, 0.02, 0.01), independent.events = FALSE)
comparison.mat<-hold.dat[[1]]
state.criteria.probs<-hold.dat[[2]][,1:(ncol(hold.dat[[2]])-1)]
likelihood.vector<-c(0.17, 0.42, 0.17, 0.08, 0.08, 0.05, 0.02, 0.01)
#' @return the SMCDM results
#' @export
#'
#' @examples
#' data <- read.csv(system.file("extdata", "SMCDM_input.csv", package = "RMCDA"), header=FALSE)
#' mat.lst <- read.csv.SMCDM.matrices(data)
#' comparison.mat <- mat.lst[[1]]
#' state.criteria.probs <- mat.lst[[2]]
#' likelihood.vector <- mat.lst[[3]]
#' apply.SMCDM(comparison.mat, state.criteria.probs, likelihood.vector)
apply.SMCDM <- function(comparison.mat, state.criteria.probs, likelihood.vector, independent.events = TRUE){
if(independent.events == TRUE){
extended.states <- t(apply(state.criteria.probs[,2:ncol(state.criteria.probs)], 1, function(x) {
apply(combn(ncol(state.criteria.probs[,2:ncol(state.criteria.probs)]), 2), 2, function(y) mean(x[y])) }))
all.event.happened.state <- rowMeans(state.criteria.probs[,2:ncol(state.criteria.probs)])
extended.states <- cbind(extended.states, all.event.happened.state)
colnames(extended.states) <- paste0("state.", seq(ncol(state.criteria.probs), ncol(state.criteria.probs)+ncol(extended.states)-1, 1))
state.df <- cbind(state.criteria.probs, extended.states)
likelihood.vector.stratum.2 <- likelihood.vector[-1]/likelihood.vector[1]
likelihood.vector.stratum.3 <- apply(combn(likelihood.vector.stratum.2, 2), 2, prod)
likelihood.vector.stratum.4 <- prod(likelihood.vector.stratum.2)
coefficients <- c(
likelihood.vector.stratum.4,  #Coefficient of p^3
sum(likelihood.vector.stratum.3),  #Coefficient of p^2
sum(likelihood.vector.stratum.2)+1,  #Coefficient of p^1
-1                            #Constant term at the end
)
}else{
state.df <- state.criteria.probs
likelihood.vector.stratum.2 <- likelihood.vector[2:4]
likelihood.vector.stratum.3 <- likelihood.vector[5:7]
likelihood.vector.stratum.4 <- likelihood.vector[8]
coefficients <- c(
likelihood.vector.stratum.4,  #Coefficient of p^3
sum(likelihood.vector.stratum.3),  #Coefficient of p^2
sum(likelihood.vector.stratum.2),  #Coefficient of p^1
likelihood.vector[1]              #Constant term at the end
)
}
coefficients <- c(
likelihood.vector.stratum.4,  #Coefficient of p^3
sum(likelihood.vector.stratum.3),  #Coefficient of p^2
sum(likelihood.vector.stratum.2)+1,  #Coefficient of p^1
-1                            #Constant term at the end
)
#Find the roots of the equation
roots <- polyroot(rev(coefficients))
non.Im.root <- Re(roots[Im(roots) == 0])
if(length(non.Im.root)==0){
tolerance <- 1e-10
non.Im.root <- Re(roots[abs(Im(roots)) < tolerance])
}
p.vector <- c(non.Im.root, non.Im.root*likelihood.vector.stratum.2, non.Im.root^2*likelihood.vector.stratum.3, non.Im.root^3*likelihood.vector.stratum.4)
criteria.percentages <- as.matrix(state.df) %*% (p.vector)
option.val <- as.matrix(comparison.mat) %*% (as.matrix(state.df) %*% (p.vector))
return(option.val)
}
apply.SMCDM(hold.dat[[1]], hold.dat[[2]][,1:(ncol(hold.dat[[2]])-1)], c(0.17, 0.42, 0.17, 0.08, 0.08, 0.05, 0.02, 0.01), independent.events = FALSE)
#' @return the SMCDM results
#' @export
#'
#' @examples
#' data <- read.csv(system.file("extdata", "SMCDM_input.csv", package = "RMCDA"), header=FALSE)
#' mat.lst <- read.csv.SMCDM.matrices(data)
#' comparison.mat <- mat.lst[[1]]
#' state.criteria.probs <- mat.lst[[2]]
#' likelihood.vector <- mat.lst[[3]]
#' apply.SMCDM(comparison.mat, state.criteria.probs, likelihood.vector)
apply.SMCDM <- function(comparison.mat, state.criteria.probs, likelihood.vector, independent.events = TRUE){
if(independent.events == TRUE){
extended.states <- t(apply(state.criteria.probs[,2:ncol(state.criteria.probs)], 1, function(x) {
apply(combn(ncol(state.criteria.probs[,2:ncol(state.criteria.probs)]), 2), 2, function(y) mean(x[y])) }))
all.event.happened.state <- rowMeans(state.criteria.probs[,2:ncol(state.criteria.probs)])
extended.states <- cbind(extended.states, all.event.happened.state)
colnames(extended.states) <- paste0("state.", seq(ncol(state.criteria.probs), ncol(state.criteria.probs)+ncol(extended.states)-1, 1))
state.df <- cbind(state.criteria.probs, extended.states)
likelihood.vector.stratum.2 <- likelihood.vector[-1]/likelihood.vector[1]
likelihood.vector.stratum.3 <- apply(combn(likelihood.vector.stratum.2, 2), 2, prod)
likelihood.vector.stratum.4 <- prod(likelihood.vector.stratum.2)
coefficients <- c(
likelihood.vector.stratum.4,  #Coefficient of p^3
sum(likelihood.vector.stratum.3),  #Coefficient of p^2
sum(likelihood.vector.stratum.2)+1,  #Coefficient of p^1
-1                            #Constant term at the end
)
}else{
state.df <- state.criteria.probs
likelihood.vector.stratum.2 <- likelihood.vector[2:4]
likelihood.vector.stratum.3 <- likelihood.vector[5:7]
likelihood.vector.stratum.4 <- likelihood.vector[8]
coefficients <- c(
likelihood.vector.stratum.4,  #Coefficient of p^3
sum(likelihood.vector.stratum.3),  #Coefficient of p^2
sum(likelihood.vector.stratum.2),  #Coefficient of p^1
likelihood.vector[1]              #Constant term at the end
)
}
#Find the roots of the equation
roots <- polyroot(rev(coefficients))
non.Im.root <- Re(roots[Im(roots) == 0])
if(length(non.Im.root)==0){
tolerance <- 1e-10
non.Im.root <- Re(roots[abs(Im(roots)) < tolerance])
}
p.vector <- c(non.Im.root, non.Im.root*likelihood.vector.stratum.2, non.Im.root^2*likelihood.vector.stratum.3, non.Im.root^3*likelihood.vector.stratum.4)
criteria.percentages <- as.matrix(state.df) %*% (p.vector)
option.val <- as.matrix(comparison.mat) %*% (as.matrix(state.df) %*% (p.vector))
return(option.val)
}
apply.SMCDM(hold.dat[[1]], hold.dat[[2]][,1:(ncol(hold.dat[[2]])-1)], c(0.17, 0.42, 0.17, 0.08, 0.08, 0.05, 0.02, 0.01), independent.events = FALSE)
#' @return the SMCDM results
#' @export
#'
#' @examples
#' data <- read.csv(system.file("extdata", "SMCDM_input.csv", package = "RMCDA"), header=FALSE)
#' mat.lst <- read.csv.SMCDM.matrices(data)
#' comparison.mat <- mat.lst[[1]]
#' state.criteria.probs <- mat.lst[[2]]
#' likelihood.vector <- mat.lst[[3]]
#' apply.SMCDM(comparison.mat, state.criteria.probs, likelihood.vector)
apply.SMCDM <- function(comparison.mat, state.criteria.probs, likelihood.vector, independent.events = TRUE){
if(independent.events == TRUE){
extended.states <- t(apply(state.criteria.probs[,2:ncol(state.criteria.probs)], 1, function(x) {
apply(combn(ncol(state.criteria.probs[,2:ncol(state.criteria.probs)]), 2), 2, function(y) mean(x[y])) }))
all.event.happened.state <- rowMeans(state.criteria.probs[,2:ncol(state.criteria.probs)])
extended.states <- cbind(extended.states, all.event.happened.state)
colnames(extended.states) <- paste0("state.", seq(ncol(state.criteria.probs), ncol(state.criteria.probs)+ncol(extended.states)-1, 1))
state.df <- cbind(state.criteria.probs, extended.states)
likelihood.vector.stratum.2 <- likelihood.vector[-1]/likelihood.vector[1]
likelihood.vector.stratum.3 <- apply(combn(likelihood.vector.stratum.2, 2), 2, prod)
likelihood.vector.stratum.4 <- prod(likelihood.vector.stratum.2)
coefficients <- c(
likelihood.vector.stratum.4,  #Coefficient of p^3
sum(likelihood.vector.stratum.3),  #Coefficient of p^2
sum(likelihood.vector.stratum.2)+1,  #Coefficient of p^1
-1                            #Constant term at the end
)
}else{
state.df <- state.criteria.probs
likelihood.vector.stratum.2 <- likelihood.vector[2:4]
likelihood.vector.stratum.3 <- likelihood.vector[5:7]
likelihood.vector.stratum.4 <- likelihood.vector[8]
coefficients <- c(
likelihood.vector.stratum.4,  #Coefficient of p^3
sum(likelihood.vector.stratum.3),  #Coefficient of p^2
sum(likelihood.vector.stratum.2 + likelihood.vector[1]),  #Coefficient of p^1
-1              #Constant term at the end
)
}
#Find the roots of the equation
roots <- polyroot(rev(coefficients))
non.Im.root <- Re(roots[Im(roots) == 0])
if(length(non.Im.root)==0){
tolerance <- 1e-10
non.Im.root <- Re(roots[abs(Im(roots)) < tolerance])
}
p.vector <- c(non.Im.root, non.Im.root*likelihood.vector.stratum.2, non.Im.root^2*likelihood.vector.stratum.3, non.Im.root^3*likelihood.vector.stratum.4)
criteria.percentages <- as.matrix(state.df) %*% (p.vector)
option.val <- as.matrix(comparison.mat) %*% (as.matrix(state.df) %*% (p.vector))
return(option.val)
}
apply.SMCDM(hold.dat[[1]], hold.dat[[2]][,1:(ncol(hold.dat[[2]])-1)], c(0.17, 0.42, 0.17, 0.08, 0.08, 0.05, 0.02, 0.01), independent.events = FALSE)
#' @return the SMCDM results
#' @export
#'
#' @examples
#' data <- read.csv(system.file("extdata", "SMCDM_input.csv", package = "RMCDA"), header=FALSE)
#' mat.lst <- read.csv.SMCDM.matrices(data)
#' comparison.mat <- mat.lst[[1]]
#' state.criteria.probs <- mat.lst[[2]]
#' likelihood.vector <- mat.lst[[3]]
#' apply.SMCDM(comparison.mat, state.criteria.probs, likelihood.vector)
apply.SMCDM <- function(comparison.mat, state.criteria.probs, likelihood.vector, independent.events = TRUE){
if(independent.events == TRUE){
extended.states <- t(apply(state.criteria.probs[,2:ncol(state.criteria.probs)], 1, function(x) {
apply(combn(ncol(state.criteria.probs[,2:ncol(state.criteria.probs)]), 2), 2, function(y) mean(x[y])) }))
all.event.happened.state <- rowMeans(state.criteria.probs[,2:ncol(state.criteria.probs)])
extended.states <- cbind(extended.states, all.event.happened.state)
colnames(extended.states) <- paste0("state.", seq(ncol(state.criteria.probs), ncol(state.criteria.probs)+ncol(extended.states)-1, 1))
state.df <- cbind(state.criteria.probs, extended.states)
likelihood.vector.stratum.2 <- likelihood.vector[-1]/likelihood.vector[1]
likelihood.vector.stratum.3 <- apply(combn(likelihood.vector.stratum.2, 2), 2, prod)
likelihood.vector.stratum.4 <- prod(likelihood.vector.stratum.2)
coefficients <- c(
likelihood.vector.stratum.4,  #Coefficient of p^3
sum(likelihood.vector.stratum.3),  #Coefficient of p^2
sum(likelihood.vector.stratum.2)+1,  #Coefficient of p^1
-1                            #Constant term at the end
)
}else{
state.df <- state.criteria.probs
likelihood.vector.stratum.2 <- likelihood.vector[2:4]
likelihood.vector.stratum.3 <- likelihood.vector[5:7]
likelihood.vector.stratum.4 <- likelihood.vector[8]
coefficients <- c(
likelihood.vector.stratum.4,  #Coefficient of p^3
sum(likelihood.vector.stratum.3),  #Coefficient of p^2
sum(likelihood.vector.stratum.2),  #Coefficient of p^1
likelihood.vector[1]              #Constant term at the end
)
}
#Find the roots of the equation
roots <- polyroot(rev(coefficients))
non.Im.root <- Re(roots[Im(roots) == 0])
if(length(non.Im.root)==0){
tolerance <- 1e-10
non.Im.root <- Re(roots[abs(Im(roots)) < tolerance])
}
p.vector <- c(non.Im.root, non.Im.root*likelihood.vector.stratum.2, non.Im.root^2*likelihood.vector.stratum.3, non.Im.root^3*likelihood.vector.stratum.4)
criteria.percentages <- as.matrix(state.df) %*% (p.vector)
option.val <- as.matrix(comparison.mat) %*% (as.matrix(state.df) %*% (p.vector))
return(option.val)
}
apply.SMCDM(hold.dat[[1]], hold.dat[[2]][,1:(ncol(hold.dat[[2]])-1)], c(0.17, 0.42, 0.17, 0.08, 0.08, 0.05, 0.02, 0.01), independent.events = FALSE)
#' @return the SMCDM results
#' @export
#'
#' @examples
#' data <- read.csv(system.file("extdata", "SMCDM_input.csv", package = "RMCDA"), header=FALSE)
#' mat.lst <- read.csv.SMCDM.matrices(data)
#' comparison.mat <- mat.lst[[1]]
#' state.criteria.probs <- mat.lst[[2]]
#' likelihood.vector <- mat.lst[[3]]
#' apply.SMCDM(comparison.mat, state.criteria.probs, likelihood.vector)
apply.SMCDM <- function(comparison.mat, state.criteria.probs, likelihood.vector, independent.events = TRUE){
if(independent.events == TRUE){
extended.states <- t(apply(state.criteria.probs[,2:ncol(state.criteria.probs)], 1, function(x) {
apply(combn(ncol(state.criteria.probs[,2:ncol(state.criteria.probs)]), 2), 2, function(y) mean(x[y])) }))
all.event.happened.state <- rowMeans(state.criteria.probs[,2:ncol(state.criteria.probs)])
extended.states <- cbind(extended.states, all.event.happened.state)
colnames(extended.states) <- paste0("state.", seq(ncol(state.criteria.probs), ncol(state.criteria.probs)+ncol(extended.states)-1, 1))
state.df <- cbind(state.criteria.probs, extended.states)
likelihood.vector.stratum.2 <- likelihood.vector[-1]/likelihood.vector[1]
likelihood.vector.stratum.3 <- apply(combn(likelihood.vector.stratum.2, 2), 2, prod)
likelihood.vector.stratum.4 <- prod(likelihood.vector.stratum.2)
coefficients <- c(
likelihood.vector.stratum.4,  #Coefficient of p^3
sum(likelihood.vector.stratum.3),  #Coefficient of p^2
sum(likelihood.vector.stratum.2)+1,  #Coefficient of p^1
-1                            #Constant term at the end
)
}else{
state.df <- state.criteria.probs
likelihood.vector.stratum.2 <- likelihood.vector[2:4]
likelihood.vector.stratum.3 <- likelihood.vector[5:7]
likelihood.vector.stratum.4 <- likelihood.vector[8]
coefficients <- c(
likelihood.vector.stratum.4,  #Coefficient of p^3
sum(likelihood.vector.stratum.3),  #Coefficient of p^2
sum(likelihood.vector.stratum.2)+ likelihood.vector[1],  #Coefficient of p^1
-1              #Constant term at the end
)
}
#Find the roots of the equation
roots <- polyroot(rev(coefficients))
non.Im.root <- Re(roots[Im(roots) == 0])
if(length(non.Im.root)==0){
tolerance <- 1e-10
non.Im.root <- Re(roots[abs(Im(roots)) < tolerance])
}
p.vector <- c(non.Im.root, non.Im.root*likelihood.vector.stratum.2, non.Im.root^2*likelihood.vector.stratum.3, non.Im.root^3*likelihood.vector.stratum.4)
criteria.percentages <- as.matrix(state.df) %*% (p.vector)
option.val <- as.matrix(comparison.mat) %*% (as.matrix(state.df) %*% (p.vector))
return(option.val)
}
apply.SMCDM(hold.dat[[1]], hold.dat[[2]][,1:(ncol(hold.dat[[2]])-1)], c(0.17, 0.42, 0.17, 0.08, 0.08, 0.05, 0.02, 0.01), independent.events = FALSE)
#' @return the SMCDM results
#' @export
#'
#' @examples
#' data <- read.csv(system.file("extdata", "SMCDM_input.csv", package = "RMCDA"), header=FALSE)
#' mat.lst <- read.csv.SMCDM.matrices(data)
#' comparison.mat <- mat.lst[[1]]
#' state.criteria.probs <- mat.lst[[2]]
#' likelihood.vector <- mat.lst[[3]]
#' apply.SMCDM(comparison.mat, state.criteria.probs, likelihood.vector)
apply.SMCDM <- function(comparison.mat, state.criteria.probs, likelihood.vector, independent.events = TRUE){
if(independent.events == TRUE){
extended.states <- t(apply(state.criteria.probs[,2:ncol(state.criteria.probs)], 1, function(x) {
apply(combn(ncol(state.criteria.probs[,2:ncol(state.criteria.probs)]), 2), 2, function(y) mean(x[y])) }))
all.event.happened.state <- rowMeans(state.criteria.probs[,2:ncol(state.criteria.probs)])
extended.states <- cbind(extended.states, all.event.happened.state)
colnames(extended.states) <- paste0("state.", seq(ncol(state.criteria.probs), ncol(state.criteria.probs)+ncol(extended.states)-1, 1))
state.df <- cbind(state.criteria.probs, extended.states)
likelihood.vector.stratum.2 <- likelihood.vector[-1]/likelihood.vector[1]
likelihood.vector.stratum.3 <- apply(combn(likelihood.vector.stratum.2, 2), 2, prod)
likelihood.vector.stratum.4 <- prod(likelihood.vector.stratum.2)
coefficients <- c(
likelihood.vector.stratum.4,  #Coefficient of p^3
sum(likelihood.vector.stratum.3),  #Coefficient of p^2
sum(likelihood.vector.stratum.2)+1,  #Coefficient of p^1
-1                            #Constant term at the end
)
#Find the roots of the equation
roots <- polyroot(rev(coefficients))
non.Im.root <- Re(roots[Im(roots) == 0])
if(length(non.Im.root)==0){
tolerance <- 1e-10
non.Im.root <- Re(roots[abs(Im(roots)) < tolerance])
}
p.vector <- c(non.Im.root, non.Im.root*likelihood.vector.stratum.2, non.Im.root^2*likelihood.vector.stratum.3, non.Im.root^3*likelihood.vector.stratum.4)
}else{
state.df <- state.criteria.probs
likelihood.vector.stratum.2 <- likelihood.vector[2:4]
likelihood.vector.stratum.3 <- likelihood.vector[5:7]
likelihood.vector.stratum.4 <- likelihood.vector[8]
p.vector <- likelihood.vector
}
criteria.percentages <- as.matrix(state.df) %*% (p.vector)
option.val <- as.matrix(comparison.mat) %*% (as.matrix(state.df) %*% (p.vector))
return(option.val)
}
apply.SMCDM(hold.dat[[1]], hold.dat[[2]][,1:(ncol(hold.dat[[2]])-1)], c(0.17, 0.42, 0.17, 0.08, 0.08, 0.05, 0.02, 0.01), independent.events = FALSE)
data.path <- read.csv("~/Downloads/Doris_example_SMCDM.csv")
data.path <- read.csv("~/Downloads/Doris_example_SMCDM.csv", header=FALSE)
read.csv.SMCDM.matrices(data.path)
data.path
read.csv.SMCDM.matrices(data.path)
data.path <- read.csv("~/Downloads/Doris_example_SMCDM.csv", header=FALSE)
data.path
read.csv.SMCDM.matrices(data.path)
data.hold <- read.csv.SMCDM.matrices(data.path)
apply.SMCDM(data.hold[[1]], data.hold[[2]], c(0.17, 0.42, 0.17, 0.08, 0.08, 0.05, 0.02, 0.01), independent.events = FALSE)
apply.SMCDM(data.hold[[1]], data.hold[[2]], data.hold[[3]], independent.events = FALSE)
A <- matrix(c(250, 200, 300, 275, 225, 16, 16, 32, 32, 16, 12, 8, 16, 8, 16, 5, 3, 4, 4, 2), nrow=5, ncol=4)
colnames(A)<-c("Price", "Storage space", "Camera", "Looks")
rownames(A)<-paste0("Mobile ", seq(1, 5, 1))
A[,"Price"] <- -A[,"Price"]
apply.VIKOR(A, c(1/4, 1/4, 1/4, 1/4))
A
colnames(A)<-c("Price", "Memory", "Camera", "Looks")
A
apply.VIKOR(A, c(1/4, 1/4, 1/4, 1/4))
apply.VIKOR(A, c(0.35, 0.3, 0.2, 0.15))
devtools::build()
devtools::check()
